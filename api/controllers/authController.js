const authService = require("../services/authService");

const registerController = async (req, res) => {
  try {
    let { username, email, password, phone } = req.body;

    // check rá»—ng
    if (!username || !email || !password || !phone) {
      return res
        .status(400)
        .json({ message: "Thiáº¿u thÃ´ng tin báº¯t buá»™c!", code: 400 });
    }
    //check Ä‘á»‹nh dáº¡ng email
    let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res
        .status(400)
        .json({ message: "Email khÃ´ng há»£p lá»‡!", code: 400 });
    }
    // check Ä‘á»™ dÃ i pass
    if (password.length < 6) {
      return res
        .status(400)
        .json({ message: "Máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±!", code: 400 });
    }
    // check sá»‘ Ä‘iá»‡n thoáº¡i (chá»‰ chá»©a 10 sá»‘)
    let phoneRegex = /^[0-9]{10}$/;
    if (!phoneRegex.test(phone)) {
      return res
        .status(400)
        .json({ message: "Sá»‘ Ä‘iá»‡n thoáº¡i khÃ´ng há»£p lá»‡!", code: 400 });
    }

    let data = await authService.registerService({
      username,
      email,
      password,
      phone,
    });

    return res.status(data.code).json({
      message: data.message,
      code: data.code,
      data: data.data,
    });
  } catch (err) {
    console.log("ðŸš€ ~ registerController ~ err:", err);

    return res.status(500).json({
      message: "Lá»—i tá»« há»‡ thá»‘ng",
      code: 500,
      data: "",
    });
  }
};

const loginController = async (req, res) => {
  try {
    let { email, password } = req.body;
    if (!email || !password) {
      return res
        .status(400)
        .json({ message: "Thiáº¿u email hoáº·c máº­t kháº©u!", code: 400 });
    }
    let data = await authService.loginService(email, password);
    return res.status(200).json({
      message: data.message,
      code: data.code,
      data: data.data,
      token: data.token,
    });
  } catch (err) {
    console.log("ðŸš€ ~ loginController ~ err:", err);
    return res.status(500).json({
      message: "Lá»—i tá»« há»‡ thá»‘ng",
      code: 500,
      data: "",
    });
  }
};

module.exports = {
  registerController,
  loginController,
};
